// Start fileheader template
// Code generated by go generate; DO NOT EDIT.
// This file was generated by FactomGenerate robots

// Start Generated Code

package generated

import (
	"reflect"
	"sync"

	"github.com/FactomProject/factomd/common"
)

type foo struct {
	sync.Mutex
	common.Name
	internalMap map[int]string
}

func (q *foo) Init(parent common.NamedObject, name string, size int) *foo {
	q.Name.NameInit(parent, name, reflect.TypeOf(q).String())
	q.internalMap = make(map[int]string, size)
	return q
}

func (q *foo) Put(index int, value string) {
	q.Lock()
	q.internalMap[index] = value
	q.Unlock()
}

func (q *foo) Get(index int) string {
	v, _ := q.GetWithFlag(index)
	return v
}

func (q *foo) GetWithFlag(index int) (string, bool) {
	q.Lock()
	defer q.Unlock()
	v, ok := q.internalMap[index]
	return v, ok
}

func (q *foo) Delete(index int) {
	q.Lock()
	defer q.Unlock()
	delete(q.internalMap, index)
}

func (q *foo) Len() int {
	q.Lock()
	defer q.Unlock()
	return len(q.internalMap)
}

// End threadsafemap generated go code
//
// Start filetail template
// Code generated by go generate; DO NOT EDIT.
// End filetail template
// End Generated Code
